/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Get CPU Info by asm method */
#cmakedefine CPU_INFO_BY_ASM

/* Get CPU Info by c method */
#cmakedefine CPU_INFO_BY_C

/* Custom modes */
#cmakedefine CUSTOM_MODES

/* Do not build the float API */
#cmakedefine DISABLE_FLOAT_API

/* Assertions */
#cmakedefine ENABLE_ASSERTIONS

/* Ambisonics Support */
#cmakedefine ENABLE_EXPERIMENTAL_AMBISONICS

/* Debug fixed-point implementation */
#cmakedefine FIXED_DEBUG

/* Compile as fixed-point (for machines without a fast enough FPU) */
#cmakedefine FIXED_POINT

/* Float approximations */
#cmakedefine FLOAT_APPROX

/* Fuzzing */
#cmakedefine FUZZING

/* Define to 1 if you have the <alloca.h> header file. */
#cmakedefine01 HAVE_ALLOCA_H

/* NE10 library is installed on host. Make sure it is on target! */
#cmakedefine HAVE_ARM_NE10

/* Define to 1 if you have the <dlfcn.h> header file. */
#cmakedefine01 HAVE_DLFCN_H

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine01 HAVE_INTTYPES_H

/* Define to 1 if you have the `lrint' function. */
#cmakedefine01 HAVE_LRINT

/* Define to 1 if you have the `lrintf' function. */
#cmakedefine01 HAVE_LRINTF

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine01 HAVE_MEMORY_H

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine01 HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine01 HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine01 HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine01 HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine01 HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine01 HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine01 HAVE_UNISTD_H

/* Define to 1 if you have the `__malloc_hook' function. */
#cmakedefine01 HAVE___MALLOC_HOOK

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#cmakedefine LT_OBJDIR

/* Make use of ARM asm optimization */
#cmakedefine OPUS_ARM_ASM

/* Use generic ARMv4 inline asm optimizations */
#cmakedefine OPUS_ARM_INLINE_ASM

/* Use ARMv5E inline asm optimizations */
#cmakedefine OPUS_ARM_INLINE_EDSP

/* Use ARMv6 inline asm optimizations */
#cmakedefine OPUS_ARM_INLINE_MEDIA

/* Use ARM NEON inline asm optimizations */
#cmakedefine OPUS_ARM_INLINE_NEON

/* Define if assembler supports EDSP instructions */
#cmakedefine OPUS_ARM_MAY_HAVE_EDSP

/* Define if assembler supports ARMv6 media instructions */
#cmakedefine OPUS_ARM_MAY_HAVE_MEDIA

/* Define if compiler supports NEON instructions */
#cmakedefine OPUS_ARM_MAY_HAVE_NEON

/* Compiler supports ARMv7/Aarch64 Neon Intrinsics */
#cmakedefine OPUS_ARM_MAY_HAVE_NEON_INTR

/* Define if binary requires Aarch64 Neon Intrinsics */
#cmakedefine OPUS_ARM_PRESUME_AARCH64_NEON_INTR

/* Define if binary requires EDSP instruction support */
#cmakedefine OPUS_ARM_PRESUME_EDSP

/* Define if binary requires ARMv6 media instruction support */
#cmakedefine OPUS_ARM_PRESUME_MEDIA

/* Define if binary requires NEON instruction support */
#cmakedefine OPUS_ARM_PRESUME_NEON

/* Define if binary requires NEON intrinsics support */
#cmakedefine OPUS_ARM_PRESUME_NEON_INTR

/* This is a build of OPUS */
#cmakedefine OPUS_BUILD

/* Use run-time CPU capabilities detection */
#cmakedefine OPUS_HAVE_RTCD

/* Compiler supports X86 AVX Intrinsics */
#cmakedefine OPUS_X86_MAY_HAVE_AVX

/* Compiler supports X86 SSE Intrinsics */
#cmakedefine OPUS_X86_MAY_HAVE_SSE

/* Compiler supports X86 SSE2 Intrinsics */
#cmakedefine OPUS_X86_MAY_HAVE_SSE2

/* Compiler supports X86 SSE4.1 Intrinsics */
#cmakedefine OPUS_X86_MAY_HAVE_SSE4_1

/* Define if binary requires AVX intrinsics support */
#cmakedefine OPUS_X86_PRESUME_AVX

/* Define if binary requires SSE intrinsics support */
#cmakedefine OPUS_X86_PRESUME_SSE

/* Define if binary requires SSE2 intrinsics support */
#cmakedefine OPUS_X86_PRESUME_SSE2

/* Define if binary requires SSE4.1 intrinsics support */
#cmakedefine OPUS_X86_PRESUME_SSE4_1

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT "opus@xiph.org"

/* Define to the full name of this package. */
#define PACKAGE_NAME "opus"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "opus 1.1.3"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "opus"

/* Define to the home page for this package. */
#define PACKAGE_URL ""

/* Define to the version of this package. */
#define PACKAGE_VERSION "1.1.3"

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine01 STDC_HEADERS

/* Make use of alloca */
#cmakedefine USE_ALLOCA

/* Use C99 variable-size arrays */
#cmakedefine VAR_ARRAYS

