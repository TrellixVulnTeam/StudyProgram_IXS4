CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(Opus)

IF(ANDROID)
	SET(CAN_USE_ASSEMBLER TRUE)
	ENABLE_LANGUAGE(ASM)
ELSE()
	SET(CMAKE_ASM_COMPILE_OBJECT yasm)
ENDIF(ANDROID)

INCLUDE_DIRECTORIES(${Opus_SOURCE_DIR}
					${Opus_SOURCE_DIR}/include
					${Opus_SOURCE_DIR}/celt
					${Opus_SOURCE_DIR}/silk
					${Opus_SOURCE_DIR}/silk/fixed
					${Opus_SOURCE_DIR}/silk/float)

IF(MSVC)
	INCLUDE_DIRECTORIES(${Opus_SOURCE_DIR}/win32)
	INCLUDE(${Opus_SOURCE_DIR}/cmake/win_config.cmake)
ENDIF(MSVC)


IF(APPLE)
	INCLUDE(${Opus_SOURCE_DIR}/cmake/osx_config.cmake)
ENDIF(APPLE)

IF(ANDROID)
	INCLUDE(${Opus_SOURCE_DIR}/cmake/android_config.cmake)
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
	INCLUDE(${Opus_SOURCE_DIR}/cmake/linux_config.cmake)
ENDIF()


IF(NOT MSVC)
	CONFIGURE_FILE(${Opus_SOURCE_DIR}/config.cmake.h.in
					${Opus_SOURCE_DIR}/include/${CMAKE_SYSTEM_PROCESSOR}/config.h)
	INCLUDE_DIRECTORIES(${Opus_SOURCE_DIR}/include/${CMAKE_SYSTEM_PROCESSOR})
ENDIF(NOT MSVC)

ADD_DEFINITIONS("-DHAVE_CONFIG_H")

INCLUDE(${Opus_SOURCE_DIR}/cmake/silk_headers.cmake)
INCLUDE(${Opus_SOURCE_DIR}/cmake/silk_sources.cmake)
INCLUDE(${Opus_SOURCE_DIR}/cmake/celt_headers.cmake)	
INCLUDE(${Opus_SOURCE_DIR}/cmake/celt_sources.cmake)
INCLUDE(${Opus_SOURCE_DIR}/cmake/opus_headers.cmake)	
INCLUDE(${Opus_SOURCE_DIR}/cmake/opus_sources.cmake)


IF(NOT DISABLE_FLOAT_API)
	LIST(APPEND OPUS_SOURCES ${OPUS_SOURCES_FLOAT})
ENDIF()

#CELT
IF(OPUS_X86_MAY_HAVE_SSE)
	LIST(APPEND CELT_SOURCES ${CELT_SOURCES_SSE})
ENDIF()

IF(OPUS_X86_MAY_HAVE_SSE2)
	LIST(APPEND CELT_SOURCES ${CELT_SOURCES_SSE2})
	IF(CMAKE_SYSTEM_NAME MATCHES "Linux")
		SET(CMAKE_C_FLAGS ${CMAKE_C_FLAGS} -msse2)
	ENDIF()
ENDIF()

IF(ARM)
	LIST(APPEND CELT_SOURCES ${CELT_SOURCES_ARM})
ENDIF()

IF(OPUS_ARM_ASM)
	LIST(APPEND CELT_SOURCES ${CELT_SOURCES_ARM_ASM})
ENDIF()

IF(HAVE_ARM_NE10)
	LIST(APPEND CELT_SOURCES ${CELT_SOURCES_ARM_NE10})
ENDIF()

IF(OPUS_ARM_MAY_HAVE_NEON)
	SET(CMAKE_C_FLAGS "-mfloat-abi=softfp -mfpu=neon -mcpu=cortex-a8 ${CMAKE_C_FLAGS}")
	STRING(REPLACE "-mfloat-abi=softfp -mfpu=vfpv3-d16" "" FIXED_C_FLAGS ${CMAKE_C_FLAGS})
	SET(CMAKE_C_FLAGS ${FIXED_C_FLAGS})
ENDIF()

IF(OPUS_ARM_MAY_HAVE_NEON_INTR)
	LIST(APPEND CELT_SOURCES ${CELT_SOURCES_ARM_NEON_INTR})
ENDIF()

LIST(APPEND SILK_SOURCES ${SILK_SOURCES_COMM})


IF(OPUS_X86_MAY_HAVE_SSE4_1)
	LIST(APPEND SILK_SOURCES  ${SILK_SOURCES_SSE4_1})
	LIST(APPEND SILK_SOURCES_FIXED ${SILK_SOURCES_FIXED_SSE4_1})
	LIST(APPEND CELT_SOURCES  ${CELT_SOURCES_SSE4_1})
ELSEIF(OPUS_ARM_MAY_HAVE_NEON_INTR)
	LIST(APPEND SILK_SOURCES ${SILK_SOURCES_ARM_NEON_INTR})
ENDIF(OPUS_X86_MAY_HAVE_SSE4_1)

LIST(APPEND OPUS_SOURCES ${CELT_HEADERS} ${CELT_SOURCES})
LIST(APPEND OPUS_SOURCES ${SILK_HEADERS} ${SILK_SOURCES})
LIST(APPEND OPUS_SOURCES ${SILK_SOURCES_FIXED})

IF(NOT DISABLE_FLOAT_API)
	LIST(APPEND OPUS_SOURCES ${SILK_SOURCES_FLOAT})
ENDIF()

ADD_LIBRARY(opus STATIC ${OPUS_SOURCES})

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

SET_TARGET_PROPERTIES(opus PROPERTIES FOLDER ${CMAKE_PROJECT_NAME})





