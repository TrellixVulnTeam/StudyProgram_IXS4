CMAKE_MINIMUM_REQUIRED(VERSION 3.6.0)

PROJECT(MediaProcessor)

SET(CMAKE_OBJECT_PATH_MAX 512)
INCLUDE(${CMAKE_SOURCE_DIR}/cmake/FindGo.cmake)

IF(WIN32)
SET(CMAKE_CXX_FLAGS "-std=c++11 ${CMAKE_CXX_FLAGS}")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Zi")
SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE} /DEBUG /OPT:REF /OPT:ICF")
ELSE(WIN32)
SET(CMAKE_CXX_FLAGS "-std=c++11 -g -static-libgcc  -static-libstdc++ ${CMAKE_CXX_FLAGS}")
SET(CMAKE_CXX_FLAGS_RELEASE "-s ${CMAKE_CXX_FLAGS_RELEASE}")
SET(CMAKE_C_FLAGS_RELEASE "-s ${CMAKE_C_FLAGS_RELEASE}")
ENDIF(WIN32)

IF(NOT ANDROID)
	SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
	SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
	SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
ENDIF(NOT ANDROID)

IF(ANDROID)
	STRING(REPLACE "-fno-rtti" "" FIXED_C_FLAGS ${CMAKE_C_FLAGS})
	STRING(REPLACE "-fno-exceptions" "" FIXED_C_FLAGS ${FIXED_C_FLAGS})
	IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "armv7-a")
		STRING(REPLACE "-mfpu=vfpv3-d16" "" FIXED_C_FLAGS ${FIXED_C_FLAGS})
	ENDIF()
	SET(CMAKE_C_FLAGS ${FIXED_C_FLAGS})

	
	STRING(REPLACE "-fno-rtti" "" FIXED_CXX_FLAGS ${CMAKE_CXX_FLAGS})
	STRING(REPLACE "-fno-exceptions" "" FIXED_CXX_FLAGS ${FIXED_CXX_FLAGS})
	IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "armv7-a")
		STRING(REPLACE "-mfpu=vfpv3-d16" "" FIXED_CXX_FLAGS ${FIXED_CXX_FLAGS})
	ENDIF()
	SET(CMAKE_CXX_FLAGS ${FIXED_CXX_FLAGS})
	
ENDIF()


SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
SET_PROPERTY(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "_CMakePredefinedTargets")

IF(WIN32)
	ADD_SUBDIRECTORY(thirdparty/Poco/poco-1.7.4-win)
ELSE()
	ADD_SUBDIRECTORY(thirdparty/Poco/poco-1.7.4-gnu)
ENDIF()

OPTION(ENABLE_RTC_EVENT_LOG "enable rtc_event_log to record call statistics" ON)
SET(PROTOBUF_DIR ${CMAKE_SOURCE_DIR}/thirdparty/gRPC/third_party/protobuf/src)
SET(PROTOBUF_SCRIPT ${CMAKE_SOURCE_DIR}/cmake/protobuf.cmake)

ADD_SUBDIRECTORY(thirdparty/gRPC)

INCLUDE(${CMAKE_SOURCE_DIR}/cmake/poco.cmake)
INCLUDE(${CMAKE_SOURCE_DIR}/cmake/libs.cmake)
INCLUDE(${CMAKE_SOURCE_DIR}/cmake/groups.cmake)
INCLUDE(${CMAKE_SOURCE_DIR}/cmake/protobuf.cmake)

ADD_SUBDIRECTORY(util)
ADD_SUBDIRECTORY(commons)
ADD_SUBDIRECTORY(rtc)


IF(BUILD_TIAN)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/AudioReceiverDemo)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/AudioSenderDemo)
	ADD_SUBDIRECTORY(tests/test_webrtc/RecordAndPlayDemo)
	ADD_SUBDIRECTORY(tests/test_webrtc/VoiceChat)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/UdpClient)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/TcpClient)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/TestPoco/TestApplication)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/port_detect_test)
	#ADD_SUBDIRECTORY(ServiceTest/tianjianchao/disruptor_test)
ENDIF(BUILD_TIAN)